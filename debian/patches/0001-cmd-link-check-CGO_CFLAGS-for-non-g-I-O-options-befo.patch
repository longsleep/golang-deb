From 8f1b6febe6a4ae1f712ec2f8c5706bc3e4ce35b7 Mon Sep 17 00:00:00 2001
From: Michael Hudson-Doyle <michael.hudson@canonical.com>
Date: Wed, 6 Jan 2021 12:18:24 +1300
Subject: [PATCH] cmd/link: check CGO_CFLAGS for non -g/-I/-O options before
 internal linking

On Ubuntu we are investigating enabling link-time optimization by
default, which means the default CFLAGS will contain arguments that
cause gcc to generate object files cmd/link/internal/loadelf cannot
process. Rather than failing in this situation, scan CGO_CFLAGS in
mustLinkExternal and do not link internally if there is a flag that does
not start with -g, -I, or -O.

CFLAGS can also be injected via #cgo CFLAGS: directives but as use of
any non-standard library cgo modules disables internal linking anyway,
we don't have to worry about that here.

Fixes #43505

Change-Id: Ib083f6daf22617e2e5df67e95d3bc178942328cd
---
 src/cmd/link/internal/ld/config.go | 21 +++++++++++++++++++++
 1 file changed, 21 insertions(+)

--- a/src/cmd/link/internal/ld/config.go
+++ b/src/cmd/link/internal/ld/config.go
@@ -9,6 +9,8 @@
 	"cmd/internal/sys"
 	"fmt"
 	"log"
+	"os"
+	"strings"
 )
 
 // A BuildMode indicates the sort of object we are building.
@@ -164,6 +166,15 @@
 	return fmt.Sprintf("LinkMode(%d)", uint8(*mode))
 }
 
+// Some arguments in CGO_CFLAGS can cause the host compiler to
+// generate object files that loadelf cannot handle but arguments
+// starting with any of these values are OK.
+var internalOKCflagPrefixes = []string{
+	"-O",
+	"-g",
+	"-I",
+}
+
 // mustLinkExternal reports whether the program being linked requires
 // the external linker be used to complete the link.
 func mustLinkExternal(ctxt *Link) (res bool, reason string) {
@@ -223,6 +234,16 @@
 		return true, "dynamically linking with a shared library"
 	}
 
+outer:
+	for _, flag := range strings.Fields(os.Getenv("CGO_CFLAGS")) {
+		for _, okPrefix := range internalOKCflagPrefixes {
+			if strings.HasPrefix(flag, okPrefix) {
+				continue outer
+			}
+		}
+		return true, "CGO_CFLAGS contains flag that may inhibit internal linking: " + flag
+	}
+
 	return false, ""
 }
 
